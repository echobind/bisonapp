<% if (host.name === 'heroku') { -%>
 import express from 'express';
import { ApolloServer } from 'apollo-server-express'
<% } -%>
<% if (host.name === 'vercel') { -%>
import { ApolloServer } from 'apollo-server-micro';
<% } -%>

import { createContext } from '../../graphql/context';
import { schema } from '../../graphql/schema';

export const GRAPHQL_PATH = '/api/graphql';

<% if (host.name === 'heroku') { -%>
<% } -%>
<% if (host.name === 'vercel') { -%>
// this config block is REQUIRED on Vercel! It stops the body of incoming HTTP requests from being parsed
export const config = {
  api: {
    bodyParser: false,
  },
};
<% } -%>

export const server = new ApolloServer({
  schema,
  playground: process.env.NODE_ENV !== 'production',
  introspection: true,
  context: createContext,
  cacheControl: true,
});

<% if (host.name === 'vercel') { -%>
export default server.createHandler({ path: GRAPHQL_PATH });
<% } -%>
<% if (host.name === 'heroku') { -%>
const app = express();
server.applyMiddleware({ app });

app.listen({ port: process.env.PORT || 4000 }, () =>
  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)
);
<% } -%>
