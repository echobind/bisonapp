---
to: src/cells/<%= [h.inflection.camelize(h.dirName(name)), h.camelizedBaseName(name)].filter(Boolean).join('/') %>.tsx
---
<% formattedPath = h.camelizedPathName(name) -%>
<% component = h.camelizedBaseName(name) -%>
import { Loader } from 'lucide-react';

import { trpc, inferQueryOutput } from '@/utils/trpc';

export const Loading = () => <Loader className="animate-spin" />;
export const Error = () => <span>Error. See dev tools.</span>;
export const Empty = () => <span>No data.</span>;

export const Success = (props: inferQueryOutput<'user', 'me'>) => {
  return <span>Awesome! {props.email}</span>;
};

export const <%= component %>Cell = () => {
  const { data, isLoading, isError } = trpc.user.me.useQuery();

  if (isLoading) return <Loading />;
  if (isError) return <Error />;
  if (data) return <Success {...data} />;

  return <Empty />;
};
